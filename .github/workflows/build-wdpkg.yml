name: WDMyCloud_Mirror_GPL_v5.18 firmware

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *

env:
  SRC_URL: https://github.com/WDCommunity/wdpksrc.git
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  Publish:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq install libxml2 openssl

    - name: Download Src
      run: |
        git clone https://github.com/WDCommunity/wdpksrc.git
        ls
        cd wdpksrc

    - name: Build the Linux kernel
      run: |
        cd $GITHUB_WORKSPACE/wdpksrc
        docker build -t wdpk . 
        docker run -it -v $(pwd):/wdpksrc wdpk /bin/bash
        chmod +x $HOME_DIR/scripts/build.sh
        $GITHUB_WORKSPACE/scripts/build.sh

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: wdpkg
        path: output/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd output/bin
        echo "WDPKG=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "WD My Cloud PKG"
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.WDPKG }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
